version: "3.8"

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_MULTIPLE_DATABASES=${DB_NAMES}
    volumes:
      - ./db_init/init.sh:/docker-entrypoint-initdb.d/init.sh
      - database_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: "exit 0"
    networks:
      - new

  gateway_service:
    container_name: gateway_service
    build:
      context: ./gateway
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      - GRAPHQL_USER_URL=${GRAPHQL_USER_URL}
      - GRAPHQL_POST_URL=${GRAPHQL_POST_URL}
    ports:
      - "3000:3000"
    networks:
      - new
    depends_on:
      post_service:
        condition: service_healthy
      user_service:
        condition: service_healthy

  post_service:
    container_name: post_service
    build:
      context: ./post
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_POST_URL}
      - PORT=3002
      - TRPC_USER_URL=${TRPC_USER_URL}
    ports:
      - "3002:3000"
    depends_on:
      - postgres
    networks:
      - new
    healthcheck:
      test: "exit 0"

  user_service:
    container_name: user_service
    build:
      context: ./user
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_POST_URL}
      - PORT=3001
    ports:
      - "3001:3000"
    depends_on:
      - postgres
    networks:
      - new
    healthcheck:
      test: "exit 0"

networks:
  new:
    driver: bridge

volumes:
  database_data:
    driver: local
